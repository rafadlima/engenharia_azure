{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Nome do Workspace",
			"defaultValue": "smartbianalysis"
		},
		"AzureSqlDatabaseSynapse_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'AzureSqlDatabaseSynapse'"
		},
		"smartbianalysis-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'smartbianalysis-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:smartbianalysis.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AdventureWorkds_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/sfrechette/adventureworks-neo4j/master/data/"
		},
		"p01_BCB_Dolar_Cotacoes_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ptax.bcb.gov.br/ptax_internet/"
		},
		"smartbianalysis-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsmartbi.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineAdventureWorks')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CustomerAdvWorks",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "customers.csv"
							},
							{
								"name": "Destination",
								"value": "discosmarbi/raw/adventure/customers"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 7
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EmployeeAdvWorks",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "employees.csv"
							},
							{
								"name": "Destination",
								"value": "discosmarbi/raw/AdvWorks_Stage/employees.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 7
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OrderAdvWorks",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "orders.csv"
							},
							{
								"name": "Destination",
								"value": "discosmarbi/raw/AdvWorks_Stage/orders.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 7
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_Orders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_Orders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_Customer')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_Customer')]",
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_Employees')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_Employees')]",
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_Orders')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_Orders')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/p01_BCB_Dolar_Cotacoes')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Obter os valores de cotações do dolar do Banco Central do Brasil",
				"activities": [
					{
						"name": "Copy_5k3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "consultaBoletim.do?method=gerarCSVFechamentoMoedaNoPeriodo&ChkMoeda=61&DATAINI=01/11/2022&DATAFIM=07/01/2023"
							},
							{
								"name": "Destination",
								"value": "discosmarbi/raw/bcb-dolar"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_bcb_dolar",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_bcb_dolar",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Source_bcb_dolar')]",
				"[concat(variables('workspaceId'), '/datasets/Destination_bcb_dolar')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlstgSuperstore')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "nvarchar"
					},
					{
						"name": "Year_Birth",
						"type": "nvarchar"
					},
					{
						"name": "Education",
						"type": "nvarchar"
					},
					{
						"name": "Marital_Status",
						"type": "nvarchar"
					},
					{
						"name": "Income",
						"type": "nvarchar"
					},
					{
						"name": "Kidhome",
						"type": "nvarchar"
					},
					{
						"name": "Teenhome",
						"type": "nvarchar"
					},
					{
						"name": "Dt_Customer",
						"type": "nvarchar"
					},
					{
						"name": "Recency",
						"type": "nvarchar"
					},
					{
						"name": "MntWines",
						"type": "nvarchar"
					},
					{
						"name": "MntFruits",
						"type": "nvarchar"
					},
					{
						"name": "MntMeatProducts",
						"type": "nvarchar"
					},
					{
						"name": "MntFishProducts",
						"type": "nvarchar"
					},
					{
						"name": "MntSweetProducts",
						"type": "nvarchar"
					},
					{
						"name": "MntGoldProds",
						"type": "nvarchar"
					},
					{
						"name": "NumDealsPurchases",
						"type": "nvarchar"
					},
					{
						"name": "NumWebPurchases",
						"type": "nvarchar"
					},
					{
						"name": "NumCatalogPurchases",
						"type": "nvarchar"
					},
					{
						"name": "NumStorePurchases",
						"type": "nvarchar"
					},
					{
						"name": "NumWebVisitsMonth",
						"type": "nvarchar"
					},
					{
						"name": "Response",
						"type": "nvarchar"
					},
					{
						"name": "Complain",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stgsuperstore"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabaseSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_Customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "smartbianalysis-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdvWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer.csv",
						"folderPath": "raw/AdvWorks_Stage",
						"fileSystem": "discosmarbi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/smartbianalysis-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_Employees')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "smartbianalysis-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdvWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employees.csv",
						"folderPath": "raw/AdvWorks_Stage",
						"fileSystem": "discosmarbi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/smartbianalysis-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_Orders')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "smartbianalysis-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdvWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "orders.csv",
						"folderPath": "raw/AdvWorks_Stage",
						"fileSystem": "discosmarbi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/smartbianalysis-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Destination_bcb_dolar')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "smartbianalysis-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "bcb-dolar.csv",
						"folderPath": "raw",
						"fileSystem": "discosmarbi"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/smartbianalysis-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_Customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorkds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdvWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "customers.csv"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "  <link rel=\"dns-prefetch\" href=\"https://user-images.githubusercontent.com/\">",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AdventureWorkds')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_Employees')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorkds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdvWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "employees.csv"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "  <link rel=\"dns-prefetch\" href=\"https://user-images.githubusercontent.com/\">",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AdventureWorkds')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_Orders')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorkds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdvWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "orders.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AdventureWorkds')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source_bcb_dolar')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "p01_BCB_Dolar_Cotacoes",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "consultaBoletim.do?method=gerarCSVFechamentoMoedaNoPeriodo&ChkMoeda=61&DATAINI=01/11/2022&DATAFIM=07/01/2023"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/p01_BCB_Dolar_Cotacoes')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqldClientes')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "skClientes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AnoNascimento",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Graduacao",
						"type": "varchar"
					},
					{
						"name": "EstadoCivil",
						"type": "varchar"
					},
					{
						"name": "Renta",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "QtdCriancas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QtdAdolescentes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataCadastro",
						"type": "date"
					},
					{
						"name": "DiasUltimaCompra",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AceiteCampanha",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TemReclamacoes",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dClientes"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabaseSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlfCompras')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "vlrCompraVinhos",
						"type": "float",
						"precision": 15
					},
					{
						"name": "vlrCompraFrutas",
						"type": "float",
						"precision": 15
					},
					{
						"name": "vlrCompraCarnes",
						"type": "float",
						"precision": 15
					},
					{
						"name": "vlrCompraPeixes",
						"type": "float",
						"precision": 15
					},
					{
						"name": "vlrCompraDoces",
						"type": "float",
						"precision": 15
					},
					{
						"name": "vlrCompraDourado",
						"type": "float",
						"precision": 15
					},
					{
						"name": "nmComprasDesconto",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "nmComprasWeb",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "nmComprasCatalogo",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "nmComprasLoja",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "nmVisitasWeb",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "skfCompras",
						"type": "int",
						"precision": 10
					},
					{
						"name": "skClientes",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "fCompras"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabaseSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AdventureWorkds')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('AdventureWorkds_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabaseSynapse')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseSynapse_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/p01_BCB_Dolar_Cotacoes')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Obter os valores de cotações do dolar do Banco Central do Brasil",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('p01_BCB_Dolar_Cotacoes_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/smartbianalysis-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('smartbianalysis-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/smartbianalysis-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('smartbianalysis-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ConsultEmployee')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ScriptsAdventureWorks_Stage"
				},
				"content": {
					"query": "WITH EMPLOYEES AS (\n    SELECT *       \n    FROM\n        OPENROWSET(\n            /* 01. Definir o caminho do arquivo CSV */\n            BULK 'https://dlsmartbi.dfs.core.windows.net/discosmarbi/raw/AdvWorks_Stage/employees.csv',\n            FORMAT = 'CSV',\n            PARSER_VERSION = '2.0',\n            FIELDTERMINATOR = ','\n        ) \n        WITH (\n\n            /* 02. Definir formato dos dados COLLATE */\n            EmployeeID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            ManagerID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            FirstName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            LastName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            FullName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            JobTitle VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            OrganizationLevel VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            MaritalStatus VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            Gender VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            Territory VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            Country VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            [Group] VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8    \n\n        )                    \n        AS [result]\n)\n\n\n/* 04. Executar a consulta */\nSELECT *\nFROM EMPLOYEES\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ConsultaCustomer')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ScriptsAdventureWorks_Stage"
				},
				"content": {
					"query": "WITH CUSTOMER AS (\n    SELECT *       \n    FROM\n        OPENROWSET(\n            /* 01. Definir o caminho do arquivo CSV */\n            BULK 'https://dlsmartbi.dfs.core.windows.net/discosmarbi/raw/AdvWorks_Stage/customer.csv',\n            FORMAT = 'CSV',\n            PARSER_VERSION = '2.0',\n            FIELDTERMINATOR = ','\n        ) \n        WITH (\n\n            /* 02. Definir formato dos dados COLLATE */\n            CustomerID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            FirstName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            LastName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            FullName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n\n        )                    \n        AS [result]\n)\n\n\n/* 04. Executar a consulta */\nSELECT *\nFROM CUSTOMER\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ConsultaOrders')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ScriptsAdventureWorks_Stage"
				},
				"content": {
					"query": "WITH ORDERS AS (\n    SELECT *       \n    FROM\n        OPENROWSET(\n            /* 01. Definir o caminho do arquivo CSV */\n            BULK 'https://dlsmartbi.dfs.core.windows.net/discosmarbi/raw/AdvWorks_Stage/orders.csv',\n            FORMAT = 'CSV',\n            PARSER_VERSION = '2.0',\n            FIELDTERMINATOR = ','\n        ) \n        WITH (\n\n            /* 02. Definir formato dos dados COLLATE */\n            SalesOrderID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            SalesOrderDetailID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            OrderDate VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            DueDate VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            ShipDate VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            EmployeeID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            CustomerID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            SubTotal VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            TaxAmt VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            Freight VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            TotalDue VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            ProductID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,    \n            OrderQty VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            UnitPrice VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            UnitPriceDiscount VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            LineTotal VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n        )                    \n        AS [result]\n)\n\n\n/* 04. Executar a consulta */\nSELECT *\nFROM ORDERS\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sandbox",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Create-ExternalTable-BCBDolar')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'CsvTextFormat') \n\tCREATE EXTERNAL FILE FORMAT [CsvTextFormat] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\t FIELD_TERMINATOR = ';',\n\t\t\t STRING_DELIMITER = '\"',\n\t\t\t USE_TYPE_DEFAULT = FALSE\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'dsDataLake') \n\tCREATE EXTERNAL DATA SOURCE [dsDataLake] \n\tWITH (\n\t\tLOCATION = 'abfss://discosmarbi@dlsmartbi.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE BCB_COTACOES (\n            [DATA] VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            MOEDA_COD VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            TIPO VARCHAR(2) COLLATE Latin1_General_100_BIN2_UTF8,\n            SIGLA VARCHAR(3) COLLATE Latin1_General_100_BIN2_UTF8,\n            VALOR VARCHAR(255) COLLATE Latin1_General_100_BIN2_UTF8\n\t)\n\tWITH (\n\tLOCATION = 'raw/bcb-dolar.csv',\n\tDATA_SOURCE = [dsDataLake],\n\tFILE_FORMAT = [CsvTextFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.BCB_COTACOES\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sandbox",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Create-View-BCBDolar')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE VIEW [dbo].[VW_BCB_COTACOES]\n\tAS \n\nWITH DATA_VALUES AS (\n    SELECT *       \n    FROM\n\t[BCB_COTACOES]\n),\n\n/* 03. Converter Tipo de Dados e uso Funções de Janela */\nDATA_ANALYSIS AS (\n\n    SELECT  \n    *,\n    -- Média móvel 50 dias\n    AVG([Valor]) -- Definir o cálculo\n    OVER(PARTITION BY Sigla ORDER BY [Data] -- Definir Over\n        ROWS BETWEEN 49 PRECEDING AND CURRENT ROW)-- Definir Período\n    AS dia50_media_movel,\n\n    -- Média móvel 200 dias\n    AVG([Valor]) -- Definir o cálculo\n    OVER(PARTITION BY Sigla ORDER BY [Data] -- Definir Over\n        ROWS BETWEEN 199 PRECEDING AND CURRENT ROW)-- Definir Período\n    AS dia200_media_movel\n\n    FROM (\n        SELECT \n\n        SIGLA, \n        -- String para Datetime\n        CONVERT(DATETIME, CONCAT(SUBSTRING([DATA],1,2),'-',SUBSTRING([DATA],3,2),'-',SUBSTRING([DATA],5,4)), 103) AS [DATA], --DD-MM-YYYY\n        -- String para Numeric    \n        CONVERT(NUMERIC(18,4),REPLACE([VALOR],',','.')) AS VALOR\n\n        FROM DATA_VALUES \n    ) AS RS\n\n)\n/* 04. Executar a consulta */\nSELECT *\nFROM DATA_ANALYSIS\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sandbox",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/analise-dolar-bcb')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "/* Uso de Expressão de Tabela Comum (CTE) */\n\nWITH DATA_VALUES AS (\n    SELECT *       \n    FROM\n        OPENROWSET(\n            /* 01. Definir o caminho do arquivo CSV */\n            BULK 'https://dlsmartbi.dfs.core.windows.net/discosmarbi/raw/bcb-dolar.csv',\n            FORMAT = 'CSV',\n            PARSER_VERSION = '2.0',\n            FIELDTERMINATOR = ';'\n        ) \n        WITH (\n\n            /* 02. Definir formato dos dados COLLATE */\n            [DATA] VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            MOEDA_COD VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            TIPO VARCHAR(2) COLLATE Latin1_General_100_BIN2_UTF8,\n            SIGLA VARCHAR(3) COLLATE Latin1_General_100_BIN2_UTF8,\n            VALOR VARCHAR(255) COLLATE Latin1_General_100_BIN2_UTF8\n\n        )                    \n        AS [result]\n),\n\n/* 03. Converter Tipo de Dados e uso Funções de Janela */\nDATA_ANALYSIS AS (\n\n    SELECT  \n    *,\n    -- Média móvel 50 dias\n    AVG([Valor]) -- Definir o cálculo\n    OVER(PARTITION BY Sigla ORDER BY [Data] -- Definir Over\n        ROWS BETWEEN 49 PRECEDING AND CURRENT ROW)-- Definir Período\n    AS dia50_media_movel,\n\n    -- Média móvel 200 dias\n    AVG([Valor]) -- Definir o cálculo\n    OVER(PARTITION BY Sigla ORDER BY [Data] -- Definir Over\n        ROWS BETWEEN 199 PRECEDING AND CURRENT ROW)-- Definir Período\n    AS dia200_media_movel\n\n    FROM (\n        SELECT \n\n        SIGLA, \n        -- String para Datetime\n        CONVERT(DATETIME, CONCAT(SUBSTRING([DATA],1,2),'-',SUBSTRING([DATA],3,2),'-',SUBSTRING([DATA],5,4)), 103) AS [DATA], --DD-MM-YYYY\n        -- String para Numeric    \n        CONVERT(NUMERIC(18,4),REPLACE([VALOR],',','.')) AS VALOR\n\n        FROM DATA_VALUES \n    ) AS RS\n\n)\n/* 04. Executar a consulta */\nSELECT *\nFROM DATA_ANALYSIS\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/script-stgcustomer-load')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ScriptsAdventureWorks_Stage"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'CsvTextFormatCustomer3') \n\tCREATE EXTERNAL FILE FORMAT [CsvTextFormatCustomer3] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\t FIELD_TERMINATOR = ',',\n\t\t\t STRING_DELIMITER = '\"',\n\t\t\t USE_TYPE_DEFAULT = FALSE\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'dsDataLakeCustomer3') \n\tCREATE EXTERNAL DATA SOURCE [dsDataLakeCustomer3] \n\tWITH (\n\t\tLOCATION = 'abfss://discosmarbi@dlsmartbi.dfs.core.windows.net' \n\t)\nGO\n\nIF EXISTS ( SELECT * FROM sys.external_tables WHERE object_id = OBJECT_ID('dbo.stgCustomer') )\n    DROP EXTERNAL TABLE dbo.stgCustomer\nGO\n\nCREATE EXTERNAL TABLE dbo.stgCustomer (\n            /* 02. Definir formato dos dados COLLATE */\n            CustomerID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            FirstName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            LastName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            FullName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n\t)\n\tWITH (\n\tLOCATION = 'raw/AdvWorks_Stage/customer.csv',\n\tDATA_SOURCE = [dsDataLakeCustomer3],\n\tFILE_FORMAT = [CsvTextFormatCustomer3]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.stgCustomer\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sandbox",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/script-stgemployees-load')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ScriptsAdventureWorks_Stage"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'CsvTextFormatEmployees') \n\tCREATE EXTERNAL FILE FORMAT [CsvTextFormatEmployees] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\t FIELD_TERMINATOR = ',',\n\t\t\t STRING_DELIMITER = '\"',\n\t\t\t USE_TYPE_DEFAULT = FALSE\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'dsDataLakeEmployees') \n\tCREATE EXTERNAL DATA SOURCE [dsDataLakeEmployees] \n\tWITH (\n\t\tLOCATION = 'abfss://discosmarbi@dlsmartbi.dfs.core.windows.net' \n\t)\nGO\n\nIF EXISTS ( SELECT * FROM sys.external_tables WHERE object_id = OBJECT_ID('dbo.stgEmployees') )\n    DROP EXTERNAL TABLE dbo.stgEmployees\nGO\n\nCREATE EXTERNAL TABLE dbo.stgEmployees (\n            /* 02. Definir formato dos dados COLLATE */\n            EmployeeID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            ManagerID VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            FirstName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            LastName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            FullName VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            JobTitle VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            OrganizationLevel VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            MaritalStatus VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            Gender VARCHAR(5) COLLATE Latin1_General_100_BIN2_UTF8,\n            Territory VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n            Country VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8,\n            [Group] VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n\t)\n\tWITH (\n\tLOCATION = 'raw/AdvWorks_Stage/employees.csv',\n\tDATA_SOURCE = [dsDataLakeEmployees],\n\tFILE_FORMAT = [CsvTextFormatEmployees]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.stgEmployees\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sandbox",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}